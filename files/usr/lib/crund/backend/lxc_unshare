#!/bin/sh

backend_run_container()
{
	CONTAINER_ID="$1"
	CONFIG_FILE="${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/config.json"
	if [ ! -f ${CONFIG_FILE} ]
	then
		echo 'Err'
	else
		cgroup_container_setup ${CONTAINER_ID}
		JSON="$(cat ${CONFIG_FILE})"
		json_init
		json_load "${JSON}"
		json_get_var CMD_LIST cmd
		json_get_var LOWERDIR lowerdir
		json_get_var ENV_LIST env
		json_get_var DEV_LIST dev
		mkdir -p ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/U
		mkdir -p ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/W
		mkdir -p ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/rootfs

		ADD_DEV_CMD="cgroup_container_add_dev ${DEV_LIST} ${CONTAINER_ID}"
		${ADD_DEV_CMD}

		if ! mountpoint -q $1
		then
			mount -t overlay overlay -o lowerdir=${LOWERDIR},upperdir=${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/U,workdir=${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/W ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/rootfs
		fi

		lxc-unshare -p ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/PID -d -s "MOUNT|PID|UTSNAME|IPC|NETWORK" -M -H ${CONTAINER_ID} ${LIB_DIR}/crund_launcher ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/rootfs ${ENV_LIST} ${DEV_LIST} -c ${CMD_LIST}

		PID=$(cat ${CONTAINER_ROOTFS_DIR}/${CONTAINER_ID}/PID)
		if [ -z $PID ]
		then
			red_log ${CONTAINER_ID}
		else
			${LIB_DIR}/setup_net ${PID}
			cgroup_container_start ${CONTAINER_ID} ${PID}
			green_log ${CONTAINER_ID}
		fi
	fi
}
